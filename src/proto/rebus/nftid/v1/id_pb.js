// source: rebus/nftid/v1/id.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
goog.exportSymbol('proto.rebus.nftid.v1.IdRecord', null, global);
goog.exportSymbol('proto.rebus.nftid.v1.NftId', null, global);
goog.exportSymbol('proto.rebus.nftid.v1.Payment', null, global);
goog.exportSymbol('proto.rebus.nftid.v1.PaymentType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rebus.nftid.v1.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rebus.nftid.v1.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rebus.nftid.v1.Payment.displayName = 'proto.rebus.nftid.v1.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rebus.nftid.v1.IdRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rebus.nftid.v1.IdRecord.repeatedFields_, null);
};
goog.inherits(proto.rebus.nftid.v1.IdRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rebus.nftid.v1.IdRecord.displayName = 'proto.rebus.nftid.v1.IdRecord';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rebus.nftid.v1.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.rebus.nftid.v1.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rebus.nftid.v1.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rebus.nftid.v1.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lockedAtAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    canRefund: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rebus.nftid.v1.Payment}
 */
proto.rebus.nftid.v1.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rebus.nftid.v1.Payment;
  return proto.rebus.nftid.v1.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rebus.nftid.v1.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rebus.nftid.v1.Payment}
 */
proto.rebus.nftid.v1.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockedAtAddress(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanRefund(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rebus.nftid.v1.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rebus.nftid.v1.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rebus.nftid.v1.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rebus.nftid.v1.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLockedAtAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCanRefund();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional cosmos.base.v1beta1.Coin amount = 1;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.rebus.nftid.v1.Payment.prototype.getAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 1));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.rebus.nftid.v1.Payment} returns this
*/
proto.rebus.nftid.v1.Payment.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rebus.nftid.v1.Payment} returns this
 */
proto.rebus.nftid.v1.Payment.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rebus.nftid.v1.Payment.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.rebus.nftid.v1.Payment.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rebus.nftid.v1.Payment} returns this
 */
proto.rebus.nftid.v1.Payment.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string locked_at_address = 3;
 * @return {string}
 */
proto.rebus.nftid.v1.Payment.prototype.getLockedAtAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rebus.nftid.v1.Payment} returns this
 */
proto.rebus.nftid.v1.Payment.prototype.setLockedAtAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool can_refund = 4;
 * @return {boolean}
 */
proto.rebus.nftid.v1.Payment.prototype.getCanRefund = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rebus.nftid.v1.Payment} returns this
 */
proto.rebus.nftid.v1.Payment.prototype.setCanRefund = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rebus.nftid.v1.IdRecord.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rebus.nftid.v1.IdRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.rebus.nftid.v1.IdRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rebus.nftid.v1.IdRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rebus.nftid.v1.IdRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    organization: jspb.Message.getFieldWithDefault(msg, 3, ""),
    encryptionKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    metadataUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    documentNumber: jspb.Message.getFieldWithDefault(msg, 6, 0),
    idNumber: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paymentType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    paymentsList: jspb.Message.toObjectList(msg.getPaymentsList(),
    proto.rebus.nftid.v1.Payment.toObject, includeInstance),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rebus.nftid.v1.IdRecord}
 */
proto.rebus.nftid.v1.IdRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rebus.nftid.v1.IdRecord;
  return proto.rebus.nftid.v1.IdRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rebus.nftid.v1.IdRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rebus.nftid.v1.IdRecord}
 */
proto.rebus.nftid.v1.IdRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncryptionKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadataUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDocumentNumber(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdNumber(value);
      break;
    case 8:
      var value = /** @type {!proto.rebus.nftid.v1.PaymentType} */ (reader.readEnum());
      msg.setPaymentType(value);
      break;
    case 9:
      var value = new proto.rebus.nftid.v1.Payment;
      reader.readMessage(value,proto.rebus.nftid.v1.Payment.deserializeBinaryFromReader);
      msg.addPayments(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rebus.nftid.v1.IdRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rebus.nftid.v1.IdRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rebus.nftid.v1.IdRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rebus.nftid.v1.IdRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEncryptionKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMetadataUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDocumentNumber();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getIdNumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaymentType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getPaymentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.rebus.nftid.v1.Payment.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 type = 2;
 * @return {number}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string organization = 3;
 * @return {string}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setOrganization = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string encryption_key = 4;
 * @return {string}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getEncryptionKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setEncryptionKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string metadata_url = 5;
 * @return {string}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getMetadataUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setMetadataUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 document_number = 6;
 * @return {number}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getDocumentNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setDocumentNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string id_number = 7;
 * @return {string}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getIdNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setIdNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional PaymentType payment_type = 8;
 * @return {!proto.rebus.nftid.v1.PaymentType}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getPaymentType = function() {
  return /** @type {!proto.rebus.nftid.v1.PaymentType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.rebus.nftid.v1.PaymentType} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setPaymentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * repeated Payment payments = 9;
 * @return {!Array<!proto.rebus.nftid.v1.Payment>}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getPaymentsList = function() {
  return /** @type{!Array<!proto.rebus.nftid.v1.Payment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rebus.nftid.v1.Payment, 9));
};


/**
 * @param {!Array<!proto.rebus.nftid.v1.Payment>} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
*/
proto.rebus.nftid.v1.IdRecord.prototype.setPaymentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.rebus.nftid.v1.Payment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rebus.nftid.v1.Payment}
 */
proto.rebus.nftid.v1.IdRecord.prototype.addPayments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.rebus.nftid.v1.Payment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.clearPaymentsList = function() {
  return this.setPaymentsList([]);
};


/**
 * optional bool active = 10;
 * @return {boolean}
 */
proto.rebus.nftid.v1.IdRecord.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rebus.nftid.v1.IdRecord} returns this
 */
proto.rebus.nftid.v1.IdRecord.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * @enum {number}
 */
proto.rebus.nftid.v1.NftId = {
  NONE: 0,
  V1: 1
};

/**
 * @enum {number}
 */
proto.rebus.nftid.v1.PaymentType = {
  INVALID: 0,
  LIFETIME: 1,
  LOCK: 2
};

goog.object.extend(exports, proto.rebus.nftid.v1);
